<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <!--recyclerView的分割线-->
        <item name="android:listDivider">@drawable/listdivider</item>
    </style>
    <!--actionBar的样式-->
    <style name="ActionBarStyle" parent="Theme.AppCompat.Light.DarkActionBar">
        // ActionBar颜色
        <item name="colorPrimary">@color/colorPrimary</item>
        // 状态栏颜色
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        // EditText编辑时、RadioButton选中、CheckBox等选中时的颜色
        <item name="colorAccent">@color/colorAccent</item>
        // OverflowMenu弹出状态的样式
        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
        // OverflowMenu弹出状态的字体样式
        <item name="android:itemTextAppearance">@style/MenuTextStyle</item>
        // OverflowButton的图标
        <item name="android:actionOverflowButtonStyle">@style/OverflowButtonStyle</item>
        // 导航功能图标
        <item name="android:homeAsUpIndicator">@drawable/bg</item>
        // actionBar显示的menu的字体大小
        <item name="actionMenuTextAppearance">@style/ActionMenuTextStyle</item>
        // actionBar显示的menu的字体颜色
        <item name="actionMenuTextColor">@android:color/black</item>
        // 去除阴影的
        <item name="android:windowContentOverlay">@null</item>
        // 设置actionBar高度
        <item name="android:actionBarSize">40dp</item>
        // OverflowMenu弹出状态Menu的分割线
        <item name="android:dropDownListViewStyle">@style/YourThemeDropDownListView</item>
        // actionBar
        <item name="actionBarStyle">@style/ActionBarBaseStyle</item>
    </style>

    <!--toolbar-->
    <style name="ToolbarStyle" parent="Theme.AppCompat.DayNight.NoActionBar">
        <!--消除windowBackground对Activity的绘制速度的影响
        <item name="android:windowBackground">@null</item>
        -->
        <!--虚拟键透明-->
        <!--<item name="android:windowTranslucentNavigation">true</item>-->
        <item name="android:windowBackground">@drawable/yichan</item>
        <!--设置状态栏背景颜色配合windowDrawsSystemBarBackgrounds使用-->
        <item name="android:statusBarColor">@android:color/holo_red_light</item>
        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
        <!--页面拉伸到状态栏透明状态栏下面-->
        <item name="android:windowTranslucentStatus">false</item>
        <!--全屏-->
        <item name="android:windowFullscreen">false</item>
        <!--设置状态栏字体为灰色-->
        <item name="android:windowLightStatusBar">false</item>
        <!--设置activity的window为透明窗口,会等待-->
        <item name="android:windowIsTranslucent">false</item>
        <!--ActionBar颜色-->
        <item name="colorPrimary">@color/colorPrimary</item>
        <!--状态栏颜色-->
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <!--ditText编辑时、RadioButton选中、CheckBox等选中时的颜色-->
        <item name="colorAccent">@color/colorAccent</item>
        <!--OverflowMenu弹出状态的样式-->
        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
        <!--OverflowMenu弹出状态的字体样式-->
        <item name="android:itemTextAppearance">@style/MenuTextStyle</item>
        <!--OverflowButton的图标-->
        <item name="android:actionOverflowButtonStyle">@style/OverflowButtonStyle</item>
        <!--导航功能图标-->
        <item name="android:homeAsUpIndicator">@drawable/bg</item>
        <!--toolBar显示的menu的字体大小-->
        <item name="actionMenuTextAppearance">@style/ActionMenuTextStyle</item>
        <!--toolbarBar显示的menu的字体颜色-->
        <item name="actionMenuTextColor">@android:color/black</item>
        <!--去除阴影的-->
        <item name="android:windowContentOverlay">@null</item>
        <!--设置actionBar高度-->
        <!--<item name="android:actionBarSize">80dp</item>-->
        <!--OverflowMenu弹出状态Menu的分割线-->
        <item name="android:dropDownListViewStyle">@style/YourThemeDropDownListView</item>
        <!--toolBar左右边距-->
        <item name="toolbarStyle">@style/ToolBarBaseStyle</item>
    </style>
    <!--OverflowMenu弹出状态的样式-->
    <style name="OverflowMenuStyle" parent="@style/Widget.AppCompat.PopupMenu.Overflow">
        // 是否覆盖锚点，默认为true，即盖住actionBar
        <item name="overlapAnchor">false</item>
        // 弹出层背景颜色
        <item name="android:popupBackground">#313431</item>
        // 弹出层垂直方向上的偏移，即在竖直方向上距离actionBar的距离，值为负则会盖住actionBar
        <item name="android:dropDownVerticalOffset">5dp</item>
        // 弹出层水平方向上的偏移,负值会导致右边出现空隙
        <item name="android:dropDownHorizontalOffset">0dp</item>
    </style>
    <!--OverflowMenu弹出状态的字体样式-->
    <style name="MenuTextStyle">
        // OptionsMenu弹出状态字体颜色
        <item name="android:textColor">@android:color/holo_red_light</item>
        // OptionsMenu弹出状态字体大小
        <item name="android:textSize">16sp</item>
        <item name="android:gravity">center</item>
    </style>
    <!--OverflowButton的图标-->
    <style name="OverflowButtonStyle">
        <item name="android:src">@android:drawable/ic_menu_more</item>
        // 图标距离右侧距离
        <item name="android:paddingRight">0dp</item>
    </style>
    <!--actionBar显示菜单的字体大小-->
    <style name="ActionMenuTextStyle">
        <item name="android:textSize">46sp</item>
    </style>
    <!--OverflowMenu弹出状态Menu的分割线-->
    <style name="YourThemeDropDownListView" parent="Widget.AppCompat.ListView.DropDown">
        <item name="android:divider">@color/colorAccent</item>
        <item name="android:dividerHeight">3dp</item>
    </style>

    <style name="ActionBarBaseStyle" parent="Widget.AppCompat.ActionBar">
        // actionBar背景色
        <item name="background">@android:color/holo_green_light</item>
        // 右边距为0
        <item name="contentInsetEnd">0dp</item>
        // 左边距为0
        <item name="contentInsetStart">0dp</item>
        // NavigationIcon和Title的距离
        <item name="contentInsetStartWithNavigation">0dp</item>
    </style>

    <style name="ToolBarBaseStyle" parent="Widget.AppCompat.Toolbar">
        // actionBar背景色
        <item name="background">@android:color/holo_green_light</item>
        // 右边距为0
        <item name="contentInsetEnd">0dp</item>
        // 左边距为0
        <item name="contentInsetStart">0dp</item>
        // NavigationIcon和Title的距离
        <item name="contentInsetStartWithNavigation">0dp</item>
    </style>
    <!--NavigationView字体大小app:itemTextAppearance="@style/NavigationViewitemTextAppearance"-->
    <style name="NavigationViewItemTextAppearance">
        <item name="android:textSize">16sp</item>
    </style>
    <!--设置DrawerArrowToggle的颜色-->
    <style name="DrawerToggleStyle" parent="Theme.AppCompat.DayNight.NoActionBar">
        <!--设置DrawerArrowToggle的颜色-->
        <item name="drawerArrowStyle">@style/BaseDrawerToggleStyle</item>
    </style>

    <style name="BaseDrawerToggleStyle" parent="Base.Widget.AppCompat.DrawerArrowToggle">
        <item name="color">@android:color/black</item>
    </style>
    <!--progressbar的样式style="@style/ProgressLoadingStyle"-->
    <style name="ProgressLoadingStyle" parent="Widget.AppCompat.ProgressBar">
        <item name="android:indeterminateDrawable">@drawable/progressbar</item>
    </style>
    <!--TabLayout字体app:tabTextAppearance="@style/tabLayoutTextAppearance"-->
    <style name="tabLayoutTextAppearance" parent="TextAppearance.AppCompat.Widget.ActionBar.Title.Inverse">
        <item name="android:textSize">18sp</item>
        <item name="textAllCaps">false</item>
        <item name="android:textColor">@android:color/black</item>
    </style>
</resources>
